import { type NextRequest, NextResponse } from "next/server"
import { query } from "@/lib/storage"
import { getCurrentUser } from "@/lib/auth"

export async function GET(request: NextRequest, { params }: { params: { id: string } }) {
  try {
    const reportId = params.id
    const user = await getCurrentUser()

    if (!user) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 })
    }

    const reportResult = await query(`SELECT * FROM medical_reports WHERE id = $1 AND user_id = $2`, [
      Number.parseInt(reportId),
      user.id,
    ])

    if (reportResult.rows.length === 0) {
      return NextResponse.json({ error: "Report not found" }, { status: 404 })
    }

    const report = reportResult.rows[0]

    // Parse analysis results
    const analysisResults =
      typeof report.analysis_results === "string" ? JSON.parse(report.analysis_results) : report.analysis_results || {}

    const findings = analysisResults.findings || []
    const recommendations = analysisResults.recommendations || []

    const reportContent = `
MEDICAL ANALYSIS REPORT
=======================

Patient: ${user.firstName} ${user.lastName}
Date: ${new Date(report.created_at).toLocaleDateString()}
Image Type: ${report.image_type}
Body Part: ${report.body_part}
Confidence Score: ${report.confidence_score}%

CLINICAL FINDINGS:
${findings.map((f: string, i: number) => `${i + 1}. ${f}`).join("\n")}

RECOMMENDATIONS:
${recommendations.map((r: string, i: number) => `${i + 1}. ${r}`).join("\n")}

DISCLAIMER:
This AI-generated analysis is for educational purposes only and should not replace professional medical consultation.

Generated by MediScan AI
    `

    return new NextResponse(reportContent, {
      headers: {
        "Content-Type": "text/plain",
        "Content-Disposition": `attachment; filename="medical-report-${reportId}.txt"`,
      },
    })
  } catch (error) {
    console.error("Download report error:", error)
    return NextResponse.json({ error: "Failed to download report" }, { status: 500 })
  }
}
